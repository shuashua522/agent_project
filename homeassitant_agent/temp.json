[
  {
    "domain": "homeassistant",
    "services": {
      "save_persistent_states": {
        "name": "Save persistent states",
        "description": "Saves the persistent states immediately. Maintains the normal periodic saving interval.",
        "fields": {}
      },
      "turn_off": {
        "name": "Generic turn off",
        "description": "Generic action to turn devices off under any domain.",
        "fields": {},
        "target": {
          "entity": [
            {}
          ]
        }
      },
      "turn_on": {
        "name": "Generic turn on",
        "description": "Generic action to turn devices on under any domain.",
        "fields": {},
        "target": {
          "entity": [
            {}
          ]
        }
      },
      "toggle": {
        "name": "Generic toggle",
        "description": "Generic action to toggle devices on/off under any domain.",
        "fields": {},
        "target": {
          "entity": [
            {}
          ]
        }
      },
      "stop": {
        "name": "Stop",
        "description": "Stops Home Assistant.",
        "fields": {}
      },
      "restart": {
        "name": "Restart",
        "description": "Restarts Home Assistant.",
        "fields": {}
      },
      "check_config": {
        "name": "Check configuration",
        "description": "Checks the Home Assistant YAML-configuration files for errors. Errors will be shown in the Home Assistant logs.",
        "fields": {}
      },
      "update_entity": {
        "name": "Update entity",
        "description": "Forces one or more entities to update its data.",
        "fields": {
          "entity_id": {
            "required": true,
            "selector": {
              "entity": {
                "multiple": true
              }
            },
            "name": "Entities to update",
            "description": "List of entities to force update."
          }
        }
      },
      "reload_core_config": {
        "name": "Reload core configuration",
        "description": "Reloads the core configuration from the YAML-configuration.",
        "fields": {}
      },
      "set_location": {
        "name": "Set location",
        "description": "Updates the Home Assistant location.",
        "fields": {
          "latitude": {
            "required": true,
            "example": 32.87336,
            "selector": {
              "number": {
                "mode": "box",
                "min": -90,
                "max": 90,
                "step": "any"
              }
            },
            "name": "Latitude",
            "description": "Latitude of your location."
          },
          "longitude": {
            "required": true,
            "example": 117.22743,
            "selector": {
              "number": {
                "mode": "box",
                "min": -180,
                "max": 180,
                "step": "any"
              }
            },
            "name": "Longitude",
            "description": "Longitude of your location."
          },
          "elevation": {
            "required": false,
            "example": 120,
            "selector": {
              "number": {
                "mode": "box",
                "step": "any"
              }
            },
            "name": "Elevation",
            "description": "Elevation of your location above sea level."
          }
        }
      },
      "reload_custom_templates": {
        "name": "Reload custom Jinja2 templates",
        "description": "Reloads Jinja2 templates found in the `custom_templates` folder in your config. New values will be applied on the next render of the template.",
        "fields": {}
      },
      "reload_config_entry": {
        "name": "Reload config entry",
        "description": "Reloads the specified config entry.",
        "fields": {
          "entry_id": {
            "advanced": true,
            "required": false,
            "example": "8955375327824e14ba89e4b29cc3ec9a",
            "selector": {
              "text": null
            },
            "name": "Config entry ID",
            "description": "The configuration entry ID of the entry to be reloaded."
          }
        },
        "target": {
          "entity": [
            {}
          ],
          "device": [
            {}
          ]
        }
      },
      "reload_all": {
        "name": "Reload all",
        "description": "Reload all YAML configuration that can be reloaded without restarting Home Assistant.",
        "fields": {}
      }
    }
  },
  {
    "domain": "persistent_notification",
    "services": {
      "create": {
        "name": "Create",
        "description": "Shows a notification on the notifications panel.",
        "fields": {
          "message": {
            "required": true,
            "example": "Please check your configuration.yaml.",
            "selector": {
              "text": null
            },
            "name": "Message",
            "description": "Message body of the notification."
          },
          "title": {
            "example": "Test notification",
            "selector": {
              "text": null
            },
            "name": "Title",
            "description": "Optional title of the notification."
          },
          "notification_id": {
            "example": 1234,
            "selector": {
              "text": null
            },
            "name": "Notification ID",
            "description": "ID of the notification. This new notification will overwrite an existing notification with the same ID."
          }
        }
      },
      "dismiss": {
        "name": "Dismiss",
        "description": "Deletes a notification from the notifications panel.",
        "fields": {
          "notification_id": {
            "required": true,
            "example": 1234,
            "selector": {
              "text": null
            },
            "name": "Notification ID",
            "description": "ID of the notification to be deleted."
          }
        }
      },
      "dismiss_all": {
        "name": "Dismiss all",
        "description": "Deletes all notifications from the notifications panel.",
        "fields": {}
      }
    }
  },
  {
    "domain": "logger",
    "services": {
      "set_default_level": {
        "name": "Set default level",
        "description": "Sets the default log level for integrations.",
        "fields": {
          "level": {
            "selector": {
              "select": {
                "options": [
                  "debug",
                  "info",
                  "warning",
                  "error",
                  "fatal",
                  "critical"
                ],
                "translation_key": "level"
              }
            },
            "name": "Level",
            "description": "Default severity level for all integrations."
          }
        }
      },
      "set_level": {
        "name": "Set level",
        "description": "Sets the log level for one or more integrations.",
        "fields": {}
      }
    }
  },
  {
    "domain": "system_log",
    "services": {
      "clear": {
        "name": "Clear",
        "description": "Deletes all log entries.",
        "fields": {}
      },
      "write": {
        "name": "Write",
        "description": "Write log entry.",
        "fields": {
          "message": {
            "required": true,
            "example": "Something went wrong",
            "selector": {
              "text": null
            },
            "name": "Message",
            "description": "Message to log."
          },
          "level": {
            "default": "error",
            "selector": {
              "select": {
                "options": [
                  "debug",
                  "info",
                  "warning",
                  "error",
                  "critical"
                ],
                "translation_key": "level"
              }
            },
            "name": "Level",
            "description": "Log level."
          },
          "logger": {
            "example": "mycomponent.myplatform",
            "selector": {
              "text": null
            },
            "name": "Logger",
            "description": "Logger name under which to log the message. Defaults to `system_log.external`."
          }
        }
      }
    }
  },
  {
    "domain": "person",
    "services": {
      "reload": {
        "name": "Reload",
        "description": "Reloads persons from the YAML-configuration.",
        "fields": {}
      }
    }
  },
  {
    "domain": "frontend",
    "services": {
      "set_theme": {
        "name": "Set the default theme",
        "description": "Sets the default theme Home Assistant uses. Can be overridden by a user.",
        "fields": {
          "name": {
            "required": true,
            "example": "default",
            "selector": {
              "theme": {
                "include_default": true
              }
            },
            "name": "Theme",
            "description": "Name of a theme."
          },
          "mode": {
            "default": "light",
            "selector": {
              "select": {
                "options": [
                  "dark",
                  "light"
                ],
                "translation_key": "mode"
              }
            },
            "name": "Mode",
            "description": "Theme mode."
          }
        }
      },
      "reload_themes": {
        "name": "Reload themes",
        "description": "Reloads themes from the YAML-configuration.",
        "fields": {}
      }
    }
  },
  {
    "domain": "recorder",
    "services": {
      "purge": {
        "name": "Purge",
        "description": "Starts purge task - to clean up old data from your database.",
        "fields": {
          "keep_days": {
            "selector": {
              "number": {
                "min": 0,
                "max": 365,
                "unit_of_measurement": "days"
              }
            },
            "name": "Days to keep",
            "description": "Number of days to keep the data in the database. Starting today, counting backward. A value of `7` means that everything older than a week will be purged."
          },
          "repack": {
            "default": false,
            "selector": {
              "boolean": null
            },
            "name": "Repack",
            "description": "Attempt to save disk space by rewriting the entire database file."
          },
          "apply_filter": {
            "default": false,
            "selector": {
              "boolean": null
            },
            "name": "Apply filter",
            "description": "Apply `entity_id` and `event_type` filters in addition to time-based purge."
          }
        }
      },
      "purge_entities": {
        "name": "Purge entities",
        "description": "Starts a purge task to remove the data related to specific entities from your database.",
        "fields": {
          "entity_id": {
            "required": false,
            "selector": {
              "entity": {
                "multiple": true
              }
            },
            "name": "Entities to remove",
            "description": "List of entities for which the data is to be removed from the recorder database."
          },
          "domains": {
            "example": "sun",
            "required": false,
            "selector": {
              "object": null
            },
            "name": "Domains to remove",
            "description": "List of domains for which the data needs to be removed from the recorder database."
          },
          "entity_globs": {
            "example": "domain*.object_id*",
            "required": false,
            "selector": {
              "object": null
            },
            "name": "Entity globs to remove",
            "description": "List of glob patterns used to select the entities for which the data is to be removed from the recorder database."
          },
          "keep_days": {
            "default": 0,
            "selector": {
              "number": {
                "min": 0,
                "max": 365,
                "unit_of_measurement": "days"
              }
            },
            "name": "Days to keep",
            "description": "Number of days to keep the data for rows matching the filter. Starting today, counting backward. A value of `7` means that everything older than a week will be purged. The default of 0 days will remove all matching rows immediately."
          }
        }
      },
      "enable": {
        "name": "Enable",
        "description": "Starts the recording of events and state changes.",
        "fields": {}
      },
      "disable": {
        "name": "Disable",
        "description": "Stops the recording of events and state changes.",
        "fields": {}
      }
    }
  },
  {
    "domain": "cloud",
    "services": {
      "remote_connect": {
        "name": "Enable remote access",
        "description": "Makes the instance UI accessible from outside of the local network by enabling your Home Assistant Cloud connection.",
        "fields": {}
      },
      "remote_disconnect": {
        "name": "Disable remote access",
        "description": "Disconnects the instance UI from Home Assistant Cloud. This disables access to it from outside your local network.",
        "fields": {}
      }
    }
  },
  {
    "domain": "tts",
    "services": {
      "speak": {
        "name": "Speak",
        "description": "Speaks something using text-to-speech on a media player.",
        "fields": {
          "media_player_entity_id": {
            "required": true,
            "selector": {
              "entity": {
                "domain": "media_player"
              }
            },
            "name": "Media player entity",
            "description": "Media players to play the message."
          },
          "message": {
            "example": "My name is hanna",
            "required": true,
            "selector": {
              "text": null
            },
            "name": "Message",
            "description": "The text you want to convert into speech so that you can listen to it on your device."
          },
          "cache": {
            "default": true,
            "selector": {
              "boolean": null
            },
            "name": "Cache",
            "description": "Stores this message locally so that when the text is requested again, the output can be produced more quickly."
          },
          "language": {
            "example": "ru",
            "selector": {
              "text": null
            },
            "name": "Language",
            "description": "Language to use for speech generation."
          },
          "options": {
            "advanced": true,
            "example": "platform specific",
            "selector": {
              "object": null
            },
            "name": "Options",
            "description": "A dictionary containing integration-specific options."
          }
        },
        "target": {
          "entity": [
            {
              "domain": [
                "tts"
              ]
            }
          ]
        }
      },
      "clear_cache": {
        "name": "Clear TTS cache",
        "description": "Removes all cached text-to-speech files and purges the memory.",
        "fields": {}
      },
      "cloud_say": {
        "name": "Say a TTS message with cloud",
        "description": "Say something using text-to-speech on a media player with cloud.",
        "fields": {
          "entity_id": {
            "required": true,
            "selector": {
              "entity": {
                "domain": "media_player"
              }
            }
          },
          "message": {
            "example": "My name is hanna",
            "required": true,
            "selector": {
              "text": null
            }
          },
          "cache": {
            "default": false,
            "selector": {
              "boolean": null
            }
          },
          "language": {
            "example": "ru",
            "selector": {
              "text": null
            }
          },
          "options": {
            "advanced": true,
            "example": "platform specific",
            "selector": {
              "object": null
            }
          }
        }
      }
    }
  },
  {
    "domain": "scene",
    "services": {
      "turn_on": {
        "name": "Activate",
        "description": "Activates a scene.",
        "fields": {
          "transition": {
            "selector": {
              "number": {
                "min": 0,
                "max": 300,
                "unit_of_measurement": "seconds"
              }
            },
            "name": "Transition",
            "description": "Time it takes the devices to transition into the states defined in the scene."
          }
        },
        "target": {
          "entity": [
            {
              "domain": [
                "scene"
              ]
            }
          ]
        }
      },
      "reload": {
        "name": "Reload",
        "description": "Reloads the scenes from the YAML-configuration.",
        "fields": {}
      },
      "apply": {
        "name": "Apply",
        "description": "Activates a scene with configuration.",
        "fields": {
          "entities": {
            "required": true,
            "example": "light.kitchen: \"on\"\nlight.ceiling:\n  state: \"on\"\n  brightness: 80\n",
            "selector": {
              "object": null
            },
            "name": "Entities state",
            "description": "List of entities and their target state."
          },
          "transition": {
            "selector": {
              "number": {
                "min": 0,
                "max": 300,
                "unit_of_measurement": "seconds"
              }
            },
            "name": "Transition",
            "description": "Time it takes the devices to transition into the states defined in the scene."
          }
        }
      },
      "create": {
        "name": "Create",
        "description": "Creates a new scene.",
        "fields": {
          "scene_id": {
            "required": true,
            "example": "all_lights",
            "selector": {
              "text": null
            },
            "name": "Scene entity ID",
            "description": "The entity ID of the new scene."
          },
          "entities": {
            "advanced": true,
            "example": "light.tv_back_light: \"on\"\nlight.ceiling:\n  state: \"on\"\n  brightness: 200\n",
            "selector": {
              "object": null
            },
            "name": "Entity states",
            "description": "List of entities and their target state. If your entities are already in the target state right now, use 'Entities snapshot' instead."
          },
          "snapshot_entities": {
            "example": "- light.ceiling\n- light.kitchen\n",
            "selector": {
              "entity": {
                "multiple": true
              }
            },
            "name": "Entities snapshot",
            "description": "List of entities to be included in the snapshot. By taking a snapshot, you record the current state of those entities. If you do not want to use the current state of all your entities for this scene, you can combine 'Entities snapshot' with 'Entity states'."
          }
        }
      },
      "delete": {
        "name": "Delete",
        "description": "Deletes a dynamically created scene.",
        "fields": {},
        "target": {
          "entity": [
            {
              "integration": "homeassistant",
              "domain": [
                "scene"
              ]
            }
          ]
        }
      }
    }
  },
  {
    "domain": "camera",
    "services": {
      "enable_motion_detection": {
        "name": "Enable motion detection",
        "description": "Enables the motion detection.",
        "fields": {},
        "target": {
          "entity": [
            {
              "domain": [
                "camera"
              ]
            }
          ]
        }
      },
      "disable_motion_detection": {
        "name": "Disable motion detection",
        "description": "Disables the motion detection.",
        "fields": {},
        "target": {
          "entity": [
            {
              "domain": [
                "camera"
              ]
            }
          ]
        }
      },
      "turn_off": {
        "name": "Turn off",
        "description": "Turns off the camera.",
        "fields": {},
        "target": {
          "entity": [
            {
              "domain": [
                "camera"
              ]
            }
          ]
        }
      },
      "turn_on": {
        "name": "Turn on",
        "description": "Turns on the camera.",
        "fields": {},
        "target": {
          "entity": [
            {
              "domain": [
                "camera"
              ]
            }
          ]
        }
      },
      "snapshot": {
        "name": "Take snapshot",
        "description": "Takes a snapshot from a camera.",
        "fields": {
          "filename": {
            "required": true,
            "example": "/tmp/snapshot_{{ entity_id.name }}.jpg",
            "selector": {
              "text": null
            },
            "name": "Filename",
            "description": "Full path to filename."
          }
        },
        "target": {
          "entity": [
            {
              "domain": [
                "camera"
              ]
            }
          ]
        }
      },
      "play_stream": {
        "name": "Play stream",
        "description": "Plays the camera stream on a supported media player.",
        "fields": {
          "media_player": {
            "required": true,
            "selector": {
              "entity": {
                "domain": "media_player"
              }
            },
            "name": "Media player",
            "description": "Media players to stream to."
          },
          "format": {
            "default": "hls",
            "selector": {
              "select": {
                "options": [
                  "hls"
                ]
              }
            },
            "name": "Format",
            "description": "Stream format supported by the media player."
          }
        },
        "target": {
          "entity": [
            {
              "domain": [
                "camera"
              ]
            }
          ]
        }
      },
      "record": {
        "name": "Record",
        "description": "Creates a recording of a live camera feed.",
        "fields": {
          "filename": {
            "required": true,
            "example": "/tmp/snapshot_{{ entity_id.name }}.mp4",
            "selector": {
              "text": null
            },
            "name": "Filename",
            "description": "Full path to filename. Must be mp4."
          },
          "duration": {
            "default": 30,
            "selector": {
              "number": {
                "min": 1,
                "max": 3600,
                "unit_of_measurement": "seconds"
              }
            },
            "name": "Duration",
            "description": "Planned duration of the recording. The actual duration may vary."
          },
          "lookback": {
            "default": 0,
            "selector": {
              "number": {
                "min": 0,
                "max": 300,
                "unit_of_measurement": "seconds"
              }
            },
            "name": "Lookback",
            "description": "Planned lookback period to include in the recording (in addition to the duration). Only available if there is currently an active HLS stream. The actual length of the lookback period may vary."
          }
        },
        "target": {
          "entity": [
            {
              "domain": [
                "camera"
              ]
            }
          ]
        }
      }
    }
  }
]