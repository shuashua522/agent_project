2025-09-15 12:45:04,466 - INFO - [temp_test:save_function_to_commons:47] - common_tools目前状况：[StructuredTool(name='multiply', description='计算两个数的乘积\n\n    参数:\n        a: 第一个乘数\n        b: 第二个乘数\n\n    返回:\n        两个数的乘积', args_schema=<class 'langchain_core.utils.pydantic.multiply'>, func=<function multiply at 0x0000018FBCB04310>)]
2025-09-15 12:45:07,774 - INFO - [temp_test:save_function_to_commons:47] - common_tools目前状况：[StructuredTool(name='multiply', description='计算两个数的乘积\n\n    参数:\n        a: 第一个乘数\n        b: 第二个乘数\n\n    返回:\n        两个数的乘积', args_schema=<class 'langchain_core.utils.pydantic.multiply'>, func=<function multiply at 0x0000018FBCB04310>), StructuredTool(name='multiply', description='计算两个数的乘积\n\n    参数:\n        a: 第一个乘数\n        b: 第二个乘数\n\n    返回:\n        两个数的乘积', args_schema=<class 'langchain_core.utils.pydantic.multiply'>, func=<function multiply at 0x0000018FBCADEEF0>)]
2025-09-15 12:45:10,838 - INFO - [temp_test:save_function_to_commons:47] - common_tools目前状况：[StructuredTool(name='multiply', description='计算两个数的乘积\n\n    参数:\n        a: 第一个乘数\n        b: 第二个乘数\n\n    返回:\n        两个数的乘积', args_schema=<class 'langchain_core.utils.pydantic.multiply'>, func=<function multiply at 0x0000018FBCB04310>), StructuredTool(name='multiply', description='计算两个数的乘积\n\n    参数:\n        a: 第一个乘数\n        b: 第二个乘数\n\n    返回:\n        两个数的乘积', args_schema=<class 'langchain_core.utils.pydantic.multiply'>, func=<function multiply at 0x0000018FBCADEEF0>), StructuredTool(name='multiply', description='计算两个数的乘积\n\n    参数:\n        a: 第一个乘数\n        b: 第二个乘数\n\n    返回:\n        两个数的乘积', args_schema=<class 'langchain_core.utils.pydantic.multiply'>, func=<function multiply at 0x0000018FBBEBAD40>)]
2025-09-15 12:46:15,326 - INFO - [temp_test:save_function_to_commons:47] - common_tools目前状况：[StructuredTool(name='multiply', description='计算两个数的乘积\n\n    参数:\n        a: 第一个乘数\n        b: 第二个乘数\n\n    返回:\n        两个数的乘积', args_schema=<class 'langchain_core.utils.pydantic.multiply'>, func=<function multiply at 0x000001AFEF7AEA70>)]
2025-09-15 12:46:18,045 - INFO - [temp_test:save_function_to_commons:47] - common_tools目前状况：[StructuredTool(name='multiply', description='计算两个数的乘积\n\n    参数:\n        a: 第一个乘数\n        b: 第二个乘数\n\n    返回:\n        两个数的乘积', args_schema=<class 'langchain_core.utils.pydantic.multiply'>, func=<function multiply at 0x000001AFEF7AEA70>), StructuredTool(name='multiply', description='计算两个数的乘积\n\n    参数:\n        a: 第一个乘数\n        b: 第二个乘数\n\n    返回:\n        两个数的乘积', args_schema=<class 'langchain_core.utils.pydantic.multiply'>, func=<function multiply at 0x000001AFEF7AEC20>)]
2025-09-15 12:46:20,651 - INFO - [temp_test:save_function_to_commons:47] - common_tools目前状况：[StructuredTool(name='multiply', description='计算两个数的乘积\n\n    参数:\n        a: 第一个乘数\n        b: 第二个乘数\n\n    返回:\n        两个数的乘积', args_schema=<class 'langchain_core.utils.pydantic.multiply'>, func=<function multiply at 0x000001AFEF7AEA70>), StructuredTool(name='multiply', description='计算两个数的乘积\n\n    参数:\n        a: 第一个乘数\n        b: 第二个乘数\n\n    返回:\n        两个数的乘积', args_schema=<class 'langchain_core.utils.pydantic.multiply'>, func=<function multiply at 0x000001AFEF7AEC20>), StructuredTool(name='multiply', description='计算两个数的乘积\n\n    参数:\n        a: 第一个乘数\n        b: 第二个乘数\n\n    返回:\n        两个数的乘积', args_schema=<class 'langchain_core.utils.pydantic.multiply'>, func=<function multiply at 0x000001AFF03ED240>)]
2025-09-15 12:46:23,232 - INFO - [temp_test:save_function_to_commons:47] - common_tools目前状况：[StructuredTool(name='multiply', description='计算两个数的乘积\n\n    参数:\n        a: 第一个乘数\n        b: 第二个乘数\n\n    返回:\n        两个数的乘积', args_schema=<class 'langchain_core.utils.pydantic.multiply'>, func=<function multiply at 0x000001AFEF7AEA70>), StructuredTool(name='multiply', description='计算两个数的乘积\n\n    参数:\n        a: 第一个乘数\n        b: 第二个乘数\n\n    返回:\n        两个数的乘积', args_schema=<class 'langchain_core.utils.pydantic.multiply'>, func=<function multiply at 0x000001AFEF7AEC20>), StructuredTool(name='multiply', description='计算两个数的乘积\n\n    参数:\n        a: 第一个乘数\n        b: 第二个乘数\n\n    返回:\n        两个数的乘积', args_schema=<class 'langchain_core.utils.pydantic.multiply'>, func=<function multiply at 0x000001AFF03ED240>), StructuredTool(name='multiply', description='计算两个数的乘积\n\n    参数:\n        a: 第一个乘数\n        b: 第二个乘数\n\n    返回:\n        两个数的乘积', args_schema=<class 'langchain_core.utils.pydantic.multiply'>, func=<function multiply at 0x000001AFF03ED510>)]
2025-09-15 12:48:32,436 - INFO - [temp_test:save_function_to_commons:47] - common_tools目前状况：[StructuredTool(name='multiply', description='计算两个数的乘积\n\n    参数:\n        a: 第一个乘数\n        b: 第二个乘数\n\n    返回:\n        两个数的乘积', args_schema=<class 'langchain_core.utils.pydantic.multiply'>, func=<function multiply at 0x00000268DA396950>)]
2025-09-15 12:48:34,771 - INFO - [temp_test:save_function_to_commons:47] - common_tools目前状况：[StructuredTool(name='multiply', description='计算两个数的乘积\n\n    参数:\n        a: 第一个乘数\n        b: 第二个乘数\n\n    返回:\n        两个数的乘积', args_schema=<class 'langchain_core.utils.pydantic.multiply'>, func=<function multiply at 0x00000268DA396950>), StructuredTool(name='multiply', description='计算两个数的乘积\n\n    参数:\n        a: 第一个乘数\n        b: 第二个乘数\n\n    返回:\n        两个数的乘积', args_schema=<class 'langchain_core.utils.pydantic.multiply'>, func=<function multiply at 0x00000268DA3969E0>)]
2025-09-15 12:48:37,199 - INFO - [temp_test:save_function_to_commons:47] - common_tools目前状况：[StructuredTool(name='multiply', description='计算两个数的乘积\n\n    参数:\n        a: 第一个乘数\n        b: 第二个乘数\n\n    返回:\n        两个数的乘积', args_schema=<class 'langchain_core.utils.pydantic.multiply'>, func=<function multiply at 0x00000268DA396950>), StructuredTool(name='multiply', description='计算两个数的乘积\n\n    参数:\n        a: 第一个乘数\n        b: 第二个乘数\n\n    返回:\n        两个数的乘积', args_schema=<class 'langchain_core.utils.pydantic.multiply'>, func=<function multiply at 0x00000268DA3969E0>), StructuredTool(name='multiply', description='计算两个数的乘积\n\n    参数:\n        a: 第一个乘数\n        b: 第二个乘数\n\n    返回:\n        两个数的乘积', args_schema=<class 'langchain_core.utils.pydantic.multiply'>, func=<function multiply at 0x00000268E07F8B80>)]
2025-09-15 12:48:39,911 - INFO - [temp_test:save_function_to_commons:47] - common_tools目前状况：[StructuredTool(name='multiply', description='计算两个数的乘积\n\n    参数:\n        a: 第一个乘数\n        b: 第二个乘数\n\n    返回:\n        两个数的乘积', args_schema=<class 'langchain_core.utils.pydantic.multiply'>, func=<function multiply at 0x00000268DA396950>), StructuredTool(name='multiply', description='计算两个数的乘积\n\n    参数:\n        a: 第一个乘数\n        b: 第二个乘数\n\n    返回:\n        两个数的乘积', args_schema=<class 'langchain_core.utils.pydantic.multiply'>, func=<function multiply at 0x00000268DA3969E0>), StructuredTool(name='multiply', description='计算两个数的乘积\n\n    参数:\n        a: 第一个乘数\n        b: 第二个乘数\n\n    返回:\n        两个数的乘积', args_schema=<class 'langchain_core.utils.pydantic.multiply'>, func=<function multiply at 0x00000268E07F8B80>), StructuredTool(name='multiply', description='计算两个数的乘积\n\n    参数:\n        a: 第一个乘数\n        b: 第二个乘数\n\n    返回:\n        两个数的乘积', args_schema=<class 'langchain_core.utils.pydantic.multiply'>, func=<function multiply at 0x00000268E07F8D30>)]
2025-09-15 12:48:42,564 - INFO - [temp_test:save_function_to_commons:47] - common_tools目前状况：[StructuredTool(name='multiply', description='计算两个数的乘积\n\n    参数:\n        a: 第一个乘数\n        b: 第二个乘数\n\n    返回:\n        两个数的乘积', args_schema=<class 'langchain_core.utils.pydantic.multiply'>, func=<function multiply at 0x00000268DA396950>), StructuredTool(name='multiply', description='计算两个数的乘积\n\n    参数:\n        a: 第一个乘数\n        b: 第二个乘数\n\n    返回:\n        两个数的乘积', args_schema=<class 'langchain_core.utils.pydantic.multiply'>, func=<function multiply at 0x00000268DA3969E0>), StructuredTool(name='multiply', description='计算两个数的乘积\n\n    参数:\n        a: 第一个乘数\n        b: 第二个乘数\n\n    返回:\n        两个数的乘积', args_schema=<class 'langchain_core.utils.pydantic.multiply'>, func=<function multiply at 0x00000268E07F8B80>), StructuredTool(name='multiply', description='计算两个数的乘积\n\n    参数:\n        a: 第一个乘数\n        b: 第二个乘数\n\n    返回:\n        两个数的乘积', args_schema=<class 'langchain_core.utils.pydantic.multiply'>, func=<function multiply at 0x00000268E07F8D30>), StructuredTool(name='multiply', description='计算两个数的乘积\n\n    参数:\n        a: 第一个乘数\n        b: 第二个乘数\n\n    返回:\n        两个数的乘积', args_schema=<class 'langchain_core.utils.pydantic.multiply'>, func=<function multiply at 0x00000268E07F8820>)]
2025-09-15 12:49:28,709 - INFO - [temp_test:save_function_to_commons:47] - common_tools目前状况：[StructuredTool(name='multiply', description='计算两个数的乘积\n\n    参数:\n        a: 第一个乘数\n        b: 第二个乘数\n\n    返回:\n        两个数的乘积', args_schema=<class 'langchain_core.utils.pydantic.multiply'>, func=<function multiply at 0x000002AE1FFE6CB0>)]
2025-09-15 12:56:00,155 - INFO - [temp_test:save_function:113] - common_tools目前状况：[StructuredTool(name='func1', description='这是func1的文档字符串，会被用作工具描述', args_schema=<class 'langchain_core.utils.pydantic.func1'>, func=<function func1 at 0x00000164BEB2E5F0>)]
2025-09-15 12:56:00,158 - INFO - [temp_test:save_function:113] - common_tools目前状况：[StructuredTool(name='func1', description='这是func1的文档字符串，会被用作工具描述', args_schema=<class 'langchain_core.utils.pydantic.func1'>, func=<function func1 at 0x00000164BEB2E5F0>), StructuredTool(name='func1', description='这是更新后的func1文档字符串', args_schema=<class 'langchain_core.utils.pydantic.func1'>, func=<function func1 at 0x00000164BEB2E320>)]
2025-09-16 12:01:38,479 - INFO - [generate_tools_to_commons:save_function_to_commons:76] - common_tools目前状况：[StructuredTool(name='multiply', description='计算两个数的乘积\n\n参数:\n    a: 第一个乘数\n    b: 第二个乘数\n\n返回:\n    两个数的乘积', args_schema=<class 'langchain_core.utils.pydantic.multiply'>, func=<function multiply at 0x0000011BD5BB3130>)]
2025-09-16 12:02:29,813 - INFO - [generate_tools_to_commons:save_function_to_commons:76] - common_tools目前状况：[StructuredTool(name='add_three', description='计算三个数的和\n\n    参数:\n        a: 第一个加数\n        b: 第二个加数\n        c: 第三个加数\n\n    返回:\n        三个数的和', args_schema=<class 'langchain_core.utils.pydantic.add_three'>, func=<function add_three at 0x00000135D402F370>)]
2025-09-16 12:27:02,656 - INFO - [generate_tools_to_commons:save_function_to_commons:76] - common_tools目前状况：[StructuredTool(name='multiply', description='计算两个数的乘积\n\n参数:\n    a: 第一个乘数\n    b: 第二个乘数\n\n返回:\n    两个数的乘积', args_schema=<class 'langchain_core.utils.pydantic.multiply'>, func=<function multiply at 0x000002B2973EE4D0>), StructuredTool(name='add_three', description='计算三个数的和\n\n    参数:\n        a: 第一个加数\n        b: 第二个加数\n        c: 第三个加数\n\n    返回:\n        三个数的和', args_schema=<class 'langchain_core.utils.pydantic.add_three'>, func=<function add_three at 0x000002B2973EE560>), StructuredTool(name='multiply', description='计算两个数的乘积\n\n参数:\n    a: 第一个乘数\n    b: 第二个乘数\n\n返回:\n    两个数的乘积', args_schema=<class 'langchain_core.utils.pydantic.multiply'>, func=<function multiply at 0x000002B29EFAB250>)]
2025-09-16 12:35:19,535 - INFO - [generate_tools_to_commons:save_function_to_commons:76] - common_tools目前状况：[StructuredTool(name='multiply', description='计算两个数的乘积\n\n参数:\n    a: 第一个乘数\n    b: 第二个乘数\n\n返回:\n    两个数的乘积', args_schema=<class 'langchain_core.utils.pydantic.multiply'>, func=<function multiply at 0x000001E7EB83E5F0>), StructuredTool(name='add_three', description='计算三个数的和\n\n    参数:\n        a: 第一个加数\n        b: 第二个加数\n        c: 第三个加数\n\n    返回:\n        三个数的和', args_schema=<class 'langchain_core.utils.pydantic.add_three'>, func=<function add_three at 0x000001E7EB83E560>), StructuredTool(name='factorial', description='计算一个非负整数的阶乘\n\n    参数:\n        n: 要计算阶乘的非负整数\n\n    返回:\n        n的阶乘，即n! = n × (n-1) × ... × 1，其中0! = 1\n\n    异常:\n        ValueError: 如果输入是负数', args_schema=<class 'langchain_core.utils.pydantic.factorial'>, func=<function factorial at 0x000001E7F342A680>)]
2025-09-16 12:43:15,155 - INFO - [generate_tools_to_commons:save_function_to_commons:76] - common_tools目前状况：[StructuredTool(name='multiply', description='计算两个数的乘积\n\n参数:\n    a: 第一个乘数\n    b: 第二个乘数\n\n返回:\n    两个数的乘积', args_schema=<class 'langchain_core.utils.pydantic.multiply'>, func=<function multiply at 0x000002243FE7E5F0>), StructuredTool(name='add_three', description='计算三个数的和\n\n    参数:\n        a: 第一个加数\n        b: 第二个加数\n        c: 第三个加数\n\n    返回:\n        三个数的和', args_schema=<class 'langchain_core.utils.pydantic.add_three'>, func=<function add_three at 0x000002243FE7E560>), StructuredTool(name='factorial', description='计算一个非负整数的阶乘\n\n    参数:\n        n: 要计算阶乘的非负整数\n\n    返回:\n        n的阶乘，即n! = n × (n-1) × ... × 1，其中0! = 1\n\n    异常:\n        ValueError: 如果输入是负数', args_schema=<class 'langchain_core.utils.pydantic.factorial'>, func=<function factorial at 0x000002243FE7E4D0>), StructuredTool(name='product', description='计算多个数的乘积\n\n参数:\n    *args: 要相乘的数字（可变数量）\n\n返回:\n    所有数字的乘积', args_schema=<class 'langchain_core.utils.pydantic.product'>, func=<function product at 0x0000022447A0E050>)]
2025-09-16 15:39:53,163 - INFO - [generate_tools_to_commons:save_function_to_commons:76] - common_tools目前状况：[StructuredTool(name='multiply', description='计算两个数的乘积\n\n参数:\n    a: 第一个乘数\n    b: 第二个乘数\n\n返回:\n    两个数的乘积', args_schema=<class 'langchain_core.utils.pydantic.multiply'>, func=<function multiply at 0x0000025B47F125F0>), StructuredTool(name='add_three', description='计算三个数的和\n\n    参数:\n        a: 第一个加数\n        b: 第二个加数\n        c: 第三个加数\n\n    返回:\n        三个数的和', args_schema=<class 'langchain_core.utils.pydantic.add_three'>, func=<function add_three at 0x0000025B47F12560>), StructuredTool(name='factorial', description='计算一个非负整数的阶乘\n\n    参数:\n        n: 要计算阶乘的非负整数\n\n    返回:\n        n的阶乘，即n! = n × (n-1) × ... × 1，其中0! = 1\n\n    异常:\n        ValueError: 如果输入是负数', args_schema=<class 'langchain_core.utils.pydantic.factorial'>, func=<function factorial at 0x0000025B47F124D0>), StructuredTool(name='multiply_multiple', description='计算多个数的乘积\n\n参数:\n    nums: 包含多个数字的列表\n\n返回:\n    列表中所有数字的乘积', args_schema=<class 'langchain_core.utils.pydantic.multiply_multiple'>, func=<function multiply_multiple at 0x0000025B4FB7F400>)]
